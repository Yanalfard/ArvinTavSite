@model DataLayer.CreateTicketInUser

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/User/Views/Shared/_UserLayout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CreateTicketInUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="TicketCategory">
                    <option value="0"></option>
                    @foreach (var item in ViewBag.TicketCategory)
                    {
                        <option value="@item.ID">@item.Title</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.TicketCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="OrderDetails">
                    @foreach (var item in ViewBag.OrderDetails)
                    {
                        <option value="@item.ID">
                            @if (item.SideID == 1)
                            {
                                @item.HostingOrder.HostingService.Title

                            }
                            else if (item.SideID == 2)
                            {
                                @item.PackageService.Title

                            }
                            else if (item.SideID == 3)
                            {
                                @item.DomainServiceOrder.DomainName
                            }
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.OrderDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="File" />
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
